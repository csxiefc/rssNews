spring:
  datasource:
    url: jdbc:mysql://localhost:3306/mcms?useUnicode=true&serverTimezone=Asia/Shanghai&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&autoReconnect=true&allowMultiQueries=true&useSSL=true
    username: root
    password: wwwwww
    filters: wall,mergeStat
    type: com.alibaba.druid.pool.DruidDataSource
  druid: # Druid连接池配置，官方配置参考：https://github.com/alibaba/druid/tree/master/druid-spring-boot-starter
    # 监控统计拦截的filters
    filters: stat,wall,mergeStat
    #      driver-class-name: com.mysql.jdbc.Driver
    driver-class-name: com.mysql.cj.jdbc.Driver
    # 配置初始化大小/最小/最大
    initial-size: 5
    # 最小连接池数量
    min-idle: 10
    # 最大连接池数量
    max-active: 20
    # 获取连接时最大等待时间，单位毫秒。
    # 配置了maxWait之后，缺省启用公平锁，并发效率会有所下降，如果需要可以通过配置useUnfairLock属性为true使用非公平锁。
    max-wait: 6000
    # 间隔多久进行一次检测，检测需要关闭的空闲连接
    time-between-eviction-runs-millis: 60000
    # 配置一个连接在连接池中的最小生存时间，单位毫秒。(连接保持空闲而不被驱逐的最小时间)
    min-evictable-idle-time-millis: 300000
    max-evictable-idle-time-millis: 900000
    # 用来检测连接是否有效的sql，要求是一个查询语句，常用select 'x'。
    # 如果validationQuery为null，testOnBorrow、testOnReturn、testWhileIdle都不会起作用。
    validation-query: SELECT 1
    # 建议配置为true，不影响性能，并且保证安全性。
    # 申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。
    test-while-idle: true
    # 申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。
    test-on-borrow: false
    # 归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。
    test-on-return: false
    # 连接池中的minIdle数量以内的连接，空闲时间超过minEvictableIdleTimeMillis，则会执行keepAlive操作。
    keep-alive: true
    phy-max-use-count: 1000
    # 有时粗心的程序编写者在从连接池中获取连接使用后忘记了连接的关闭，这样连池的连接就会逐渐达到maxActive直至连接池无法提供服务。
    # 现代连接池一般提供一种“智能”的检查，但设置了removeAbandoned="true"时，当连接池连接数到达(getNumIdle() < 2) and (getNumActive() > getMaxActive() - 3) [空闲的连接小于2并且活动的连接大于(最大连接-3)] 时便会启动连接回收，那种活动时间超过removeAbandonedTimeout="60"的连接将会被回收，同时如果logAbandoned="true"设置为true,程序在回收连接的同时会打印日志。
    # removeAbandoned是连接池的高级功能，理论上这中配置不应该出现在实际的生产环境，因为有时应用程序执行长事务，可能这种情况下，会被连接池误回收，该种配置一般在程序测试阶段，为了定位连接泄漏的具体代码位置，被开启。
    # 生产环境中连接的关闭应该靠程序自己保证。
    #      # 超过时间限制是否回收
    #      remove-abandoned: true
    #      # 超时时间；单位为秒。1800秒=30分钟
    #      remove-abandoned-timeout: 1800
    #      # 关闭abandoned连接时输出错误日志
    #      log-abandoned: true
    filter:
      stat:
        # 慢SQL记录
        slow-sql-millis: 2000
        log-slow-sql: true
        merge-sql: true
  data:
    solr:
      username: cshongye
      password: Aa123456@
      host: http://101.34.78.152:8983/solr/new_core/
client:
  auth:
    includeReferer: http://localhost:8087/,http://101.34.78.152:8087/,http://www.grow2up.online:8087/
    headerName: rss
    headerValue: 5338244087b8cfa5906d76713f0528ee1f27cc24dfd9dcf549af51894a54c5cc1c839275258397030b3cf7263a51af4e